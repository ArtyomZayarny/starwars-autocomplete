{"version":3,"sources":["apiClient.js","pages/CharterPage.js","pages/HomePage.js","components/Login.js","components/Logout.js","App.js","index.js"],"names":["apiClient","axios","create","baseURL","useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","CharterPage","props","useState","name","height","mass","hairColor","skinColor","eyeColor","birthYear","gender","homeworld","vehicles","films","data","setData","fetchData","arr","promises","map","request","push","get","then","res","Promise","all","getVehicles","a","prevState","getFilms","useEffect","length","classes","Container","maxWidth","Card","className","Button","variant","onClick","setCharacter","CardContent","Typography","component","color","List","vehicle","ListItem","model","film","HomePage","people","setPeople","character","getAllStarwarsPeople","response","results","count","numberOfPagesLeft","Math","ceil","i","reduce","acc","starwarsPeople","Object","keys","Autocomplete","id","options","onChange","event","obj","getOptionLabel","option","style","width","renderInput","params","TextField","label","Login","setToken","responseGoogle","hasOwnProperty","accessToken","clientId","buttonText","onSuccess","onFailure","cookiePolicy","Logout","onLogoutSuccess","LS","localStorage","App","token","isAuth","setAuth","getItem","prevToken","JSON","parse","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7a8f0b0.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const apiClient = axios.create({\n    baseURL: 'https://swapi.dev/api/',\n});","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { apiClient } from '../apiClient'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\n\n\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nexport default function CharterPage(props) {\n\n    const [data, setData] = useState({\n        name: '',\n        height: \"172\",\n        mass: \"77\",\n        hairColor: \"blond\",\n        skinColor: \"fair\",\n        eyeColor: \"blue\",\n        birthYear: \"19BBY\",\n        gender: \"male\",\n        homeworld: \"\",\n        vehicles: [],\n        films: \"\"\n    })\n\n    const fetchData = (arr) => {\n        let promises = [];\n        arr.map((request) => {\n            promises.push(apiClient.get(request).then(res => res.data));\n        })\n        return Promise.all(promises)\n    }\n\n\n    const getVehicles = async (arr) => {\n        const vehicles = await fetchData(arr);\n        setData((prevState) => ({ ...prevState, vehicles: vehicles }))\n    }\n\n    const getFilms = async (arr) => {\n        const films = await fetchData(arr);\n        setData((prevState) => ({ ...prevState, films: films }))\n    }\n\n    useEffect(() => {\n        apiClient.get(props.homeworld).then(res => { setData((prevState) => ({ ...prevState, homeworld: res.data.name })) });\n        if (props.vehicles.length > 0) {\n            getVehicles(props.vehicles)\n        }\n        if (props.films.length > 0) {\n            getFilms(props.films)\n        }\n        setData({ ...data, ...props })\n\n    }, [])\n    const classes = useStyles();\n\n\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Card className={classes.root}>\n                <Button variant=\"contained\" onClick={() => { props.setCharacter({}) }}>Back</Button>\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {`Name: ${data.name}`}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        {`Height: ${data.height}`}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        {`Mass: ${data.mass}`}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        {`Hair-color: ${data.hairColor}`}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        {`Skin color: ${data.skinColor}`}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        {`Eye-color: ${data.eyeColor}`}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        {`Birth year: ${data.birthYear}`}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        {`Gender: ${data.gender}`}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        {`Homeword: ${data.homeworld}`}\n                    </Typography>\n\n                    <Typography className={classes.pos} color=\"textSecondary\">Vehicles:</Typography>\n                    <List>\n                        {data.vehicles.length > 0 && data.vehicles.map(vehicle => <ListItem key={vehicle.name}>\n                            <Typography className={classes.pos} color=\"textSecondary\">{`${vehicle.name} - ${vehicle.model}`}</Typography>\n                        </ListItem>)}\n                    </List>\n                    <Typography className={classes.pos} color=\"textSecondary\">Films:</Typography>\n                    <List>\n                        {data.films.length > 0 && data.films.map(film => <ListItem key={film.title}>\n                            <Typography className={classes.pos} color=\"textSecondary\">{`${film.title}`}</Typography>\n                        </ListItem>)}\n                    </List>\n\n                </CardContent>\n            </Card>\n        </Container>\n\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CharacterPage from './CharterPage';\nimport Container from '@material-ui/core/Container';\nimport { apiClient } from '../apiClient';\n\nexport default function HomePage(props) {\n\n    const [people, setPeople] = useState([]);\n    const [character, setCharacter] = useState({})\n\n    useEffect(() => {\n\n        function getAllStarwarsPeople() {\n            let people = [];\n            return apiClient.get(\"/people\")\n                .then(response => {\n                    // collect people from first page\n                    people = response.data.results;\n                    return response.data.count;\n                })\n                .then(count => {\n                    // exclude the first request\n                    const numberOfPagesLeft = Math.ceil((count - 1) / 10);\n                    let promises = [];\n                    // start at 2 as you already queried the first page\n                    for (let i = 2; i <= numberOfPagesLeft; i++) {\n                        promises.push(apiClient.get(`/people?page=${i}`));\n                    }\n                    return Promise.all(promises);\n                })\n                .then(response => {\n                    //get the rest records - pages 2 through n.\n                    people = response.reduce((acc, data) => [...acc, ...data.data.results], people);\n                    return people;\n                })\n        }\n\n        (async () => {\n            const starwarsPeople = await getAllStarwarsPeople();\n            setPeople(starwarsPeople)\n        })();\n    }, []);\n\n    const handleChange = (event, obj) => {\n        setCharacter(obj)\n    }\n\n    return (\n\n        <Container maxWidth=\"sm\">\n            {Object.keys(character).length > 0 ? < CharacterPage {...character} setCharacter={setCharacter} /> :\n                <Autocomplete\n                    id=\"combo-box-demo\"\n                    options={people}\n                    onChange={handleChange}\n                    getOptionLabel={(option) => option.name}\n                    style={{ width: 300 }}\n                    renderInput={(params) => <TextField {...params} label=\"Character\" variant=\"outlined\" />}\n                />\n            }\n        </Container>\n\n    )\n\n}\n","import React, { useState } from 'react';\nimport GoogleLogin from 'react-google-login';\n\nexport default function Login({ setToken }) {\n    const responseGoogle = (response) => {\n        if (response.hasOwnProperty('accessToken')) {\n            setToken(response.accessToken)\n        }\n    }\n\n    return (\n        <>\n            <GoogleLogin\n                clientId=\"958722558412-s7hqutfglj8iu7eqkfhkt9ae0d70g0kg.apps.googleusercontent.com\"\n                buttonText=\"Login\"\n                onSuccess={responseGoogle}\n                onFailure={responseGoogle}\n                cookiePolicy={'single_host_origin'}\n            />\n        </>\n    )\n}\n","import React from 'react';\nimport { GoogleLogout } from 'react-google-login';\n\nexport default function Logout({ setToken }) {\n\n    const logout = () => {\n        setToken('')\n    }\n    return (\n        <>\n            <GoogleLogout\n                clientId=\"958722558412-s7hqutfglj8iu7eqkfhkt9ae0d70g0kg.apps.googleusercontent.com\"\n                buttonText=\"Logout\"\n                onLogoutSuccess={logout}\n            >\n            </GoogleLogout>\n        </>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport HomePage from './pages/HomePage';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\n\nconst LS = localStorage;\nexport default function App() {\n  const [token, setToken] = useState(false);\n  const [isAuth, setAuth] = useState(false);\n\n  useEffect(() => {\n\n    if (LS.getItem('token-key')) {\n      let prevToken = JSON.parse(LS.getItem('token-key'));\n      //set new Token\n      if (prevToken !== token && token) {\n        LS.setItem('token-key', JSON.stringify(token))\n        setToken(token)\n        setAuth(true)\n      }\n\n      if (prevToken && !token) {\n        //Clear token\n        if (token === '') {\n          LS.setItem('token-key', JSON.stringify(false))\n          setToken('')\n          setAuth(false)\n        } else {\n          setToken(prevToken)\n          setAuth(true)\n        }\n\n      }\n\n    } else {\n      LS.setItem('token-key', JSON.stringify(token))\n    }\n\n  }, [token])\n\n  return (\n    <>\n      { token ? <Logout setToken={setToken} /> : <Login setToken={setToken} />}\n      { isAuth ? <HomePage /> : ''}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}